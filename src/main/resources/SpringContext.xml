<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd">
    <!-- 支持注解 -->
    <context:annotation-config />
    <!-- 组件扫描 -->
    <context:component-scan base-package="com.fang.utils" />

    <!-- 定义Queue监听器 -->
    <jms:listener-container concurrency="10"
         destination-type="queue" container-type="default"
         connection-factory="connectionFactory" acknowledge="auto">
        <!--监听的java类-->
        <jms:listener destination="testsfsecretary" ref="ConsumerMessageListener" />
    </jms:listener-container>

    <!--设置ActiveMQ服务器地址及端口-->
    <!--<amq:connectionFactory id="amqConnectionFactory" brokerURL="failover:(tcp://192.168.4.149:61616,tcp://192.168.4.150:61616,tcp://192.168.4.151:61616)?timeout=3000" />-->
    <amq:connectionFactory id="amqConnectionFactory" brokerURL="failover:(tcp://localhost:61616)?timeout=3000" />
    <!-- 配置ActiveMQ服务器连接conneciotnFactory -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 将ActiveMQ提供的ConnectionFactory注入到Spring管理的connectionFactory中 -->
        <constructor-arg ref="amqConnectionFactory" />
        <!--设置缓存大小-->
        <property name="sessionCacheSize" value="100" />
    </bean>

    <!-- 配置JMS消息生产者 -->
    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory" />
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false" />
    </bean>
</beans>